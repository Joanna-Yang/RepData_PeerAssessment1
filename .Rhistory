install.packages("slidify")
library(ggplot2)
install.packages("ggplot2")
install.packages("KernSmooth")
library(KernSmooth)
clear
x <- list(a=1:4,b=rnorm(10),c=rnorm(20,1),d=rnorm(100,5))
head(x)
lapply(x,mean)
x<-1:4
laaply(x,runif)
x<-1:4
lapply(x,runif)
runif(5)
lapply(x,runif,min=1,max=10)
x<-list(a=matrix(1:4,2,2),b=matrix(1:6,3,2))
x
lapply(x,function(elt) elt[,1])
x <- list(a=1:4,b=rnorm(10),c=rnorm(20,1),d=rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
mean(x)
str(apply)
x<-matrix(1:4,2,2)
x
apply(x,2,mean)
apply(x,1,mean)
a<- array(rnorm(2*2*10),c=(2,2,10))
a<- array(rnorm(2 * 2 * 10),c(2, 2, 10))
a
x<-matrix(1:4,2,2)
c
x
mean(x)
a<- array(rnorm(2 * 2 * 10),c(2, 2, 10))
apply(a,c(1,2),mean)
str(mapply)
mapply(rep,1:4,4:1)
noise_-function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(1:5,1:5,2)
mapply(noise,1:5,1:5,2)
noise<-function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(1:5,1:5,2)
mapply(noise,1:5,1:5,2)
str(tapply)
x<-c(rnorm(10),runif(10),rnorm(10,1))
x<-gl(3,10)
f
x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,mean,simplify=FALSE)
tapply(x,f,range)
str(split)
split(x,f)
x[1]
x[2]
lapply(split(x,f),mean)
library(datasets)
head(airquality)
s<-split(airauality,airquality$Month)
lapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
s<-split(airquality,airquality$Month)
lapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
s<-split(airquality,airquality$Month)
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
s<-split(airquality,airquality$Month)
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")],na.rm=TRUE))
x<-rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x,list(f1,f2)))
str(split(x,list(f1,f2),drop=TRUE))
x[2]
invisible(x)
x[2];invisible(x)
print(x);invisible(x)
myprint <- function{print(x) invisible(x)}
traceback()
debug(mean)
debug(mean)
mean(x)
read.csv("nosuchfile")
options(error=recover)
read.csv("nosuchfile")
swirl()
library(swirl)
swril()
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls<-vectsapply(flags,class)
cls_vect <- saaply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
0
swirl()
sapply(flag_colors,mean)
flag_shaps<-flags[,19:23]
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
setwd("~/Desktop/Github/RepData_PeerAssessment1")
data<-read.csv("activity.csv")
head(data)
